diff --git a/spermsim/main.py b/spermsim/main.py
index 5755a7264f133c91a9baa21c64c2fe3f0caf85f1..9c6d59928bb893ca37ef68754221a9c4a98afc24 100644
--- a/spermsim/main.py
+++ b/spermsim/main.py
@@ -101,51 +101,51 @@ def get_program_version():
     try:
         file_name = os.path.basename(__file__)
     except NameError:
         file_name = "interactive"
     version = f"{file_name}"
     return version
 
 def get_constants_from_gui(selected_data, shape, volume, sperm_conc):
     """
     GUI から受け取った選択データと shape, volume, sperm_conc を元に、
     シミュレーション定数をまとめた辞書を作成して返す。
     """
     constants = {}
     constants['shape'] = shape.lower()
     constants['volume'] = float(volume)
     constants['sperm_conc'] = int(sperm_conc)
     constants['spot_angle']        = float(selected_data.get('spot_angle', 60))
     constants['vsl']               = float(selected_data.get('vsl', 0.13))
     constants['deviation']         = float(selected_data.get('deviation', 0.04))
     constants['sample_rate_hz']     = float(selected_data.get('sample_rate_hz', 2))
     constants['sim_min']           = float(selected_data.get('sim_min', 10))
     constants['gamete_r']          = float(selected_data.get('gamete_r', 0.15))
     constants['surface_time']      = float(selected_data.get('surface_time', 0))
     constants['stick_sec']         = int(selected_data.get('stick_sec', 2))
     constants['stick_steps'] = constants['stick_sec'] * constants['sample_rate_hz']
-    constants['step_length'] = constants['vsl'] / constants['sample_rate_hz']
+    constants['step_length'] = (constants['vsl'] * constants['sample_rate_hz']) / 1000
     constants['limit'] = 1e-10
     egg_localization = selected_data.get('egg_localization', 'bottom_center').strip()
     constants['egg_localization'] = egg_localization
     constants['initial_direction']    = selected_data.get('initial_direction', 'random').strip()
     constants['initial_stick'] = int(selected_data.get('initial_stick', 0))
     constants['seed_number']          = selected_data.get('seed_number', None)
     constants['N_repeat']             = int(selected_data.get('n_repeat', 1))
     outputs = selected_data.get('outputs', [])
     constants['draw_trajectory'] = 'yes' if 'graph' in outputs else 'no'
     constants['make_movie']      = 'yes' if 'movie' in outputs else 'no'
     if constants['seed_number'] and str(constants['seed_number']).lower() != IOStatus.NONE:
         np.random.seed(int(constants['seed_number']))
     constants['analysis_type'] = selected_data.get('analysis_type', "simulation")
 
     # ★ここで派生値をtools/derived_constants.pyで一元計算
     from tools.derived_constants import calculate_derived_constants
     constants = calculate_derived_constants(constants)
 
     return constants
 
 
 def placement_of_eggs(constants):
     """
     shape, egg_localization に応じた卵子の配置座標などを返す。
     """
