diff --git a/entry.py b/entry.py
index 470c12ae4060430bb9c92a1ec677af337ef510ed..9f224dbf3828f73eda23936efc28893398eb7f80 100644
--- a/entry.py
+++ b/entry.py
@@ -12,47 +12,52 @@ from tkinter import Tk
 from spermsim.initialization import SimApp
 from tools.ini_handler import load_config
 from core.simulation_core import SpermSimulation
 
 REQUIRED_KEYS = [
     "drop_r", "step_length", "number_of_sperm",
     "x_min", "x_max", "y_min", "y_max", "z_min", "z_max",
     "egg_center", "limit"
 ]
 
 def check_config_validity(constants: dict):
     missing = [k for k in REQUIRED_KEYS if k not in constants]
     if missing:
         raise ValueError(
             f"[ERROR] sperm_config.ini に以下の派生変数が含まれていません:\n{missing}\n"
             "→ GUIで保存（[保存して終了] ボタン）を完了してください。"
         )
 
 def main():
     # 1. GUI 起動
     print("[ENTRY] GUIを起動します...")
     root = Tk()
     app = SimApp(root)
     root.mainloop()  # GUIが閉じられるまで待機
 
+    # GUI内でシミュレーションが実行された場合はここで終了
+    if getattr(app, "simulation_ran", False):
+        print("[ENTRY] Simulation already executed from GUI. Exiting.")
+        return
+
     # 2. .ini 読み込み
     config_path = "sperm_config.ini"
     if not os.path.exists(config_path):
         raise FileNotFoundError("[ERROR] sperm_config.ini が見つかりません。保存して終了を押しましたか？")
 
     constants = load_config()
     check_config_validity(constants)
 
     # 3. シミュレーション実行
     result_dir = "results"
     os.makedirs(result_dir, exist_ok=True)
 
     sim = SpermSimulation(constants)
     sim.run(constants, result_dir, "simulation_result", save_flag=True)
     print("[DEBUG] plot_trajectories() を呼び出します")
     sim.plot_trajectories()
     print("[DEBUG] plot_trajectories() を完了しました")
     sim.plot_movie_trajectories()
     print("[ENTRY] シミュレーション完了。")
 
 if __name__ == "__main__":
     main()
