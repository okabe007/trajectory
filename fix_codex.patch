diff --git a/tools/derived_constants.py b/tools/derived_constants.py
index 22cc36fc3f7d56d476248d3d4ad0367112b2d03c..7da84953ca4c0c69e6a5b3b4a3e2ae4f9b321cb2 100644
--- a/tools/derived_constants.py
+++ b/tools/derived_constants.py
@@ -1,49 +1,49 @@
 import numpy as np
 import math
 
 # ✅ インライン化した関数（仕様維持）
 def calc_spot_geometry(vol_mm3: float, angle_deg: float):
     """
     spot（球冠）形状の体積と角度から、球の半径、底面半径、底面高さを返す。
     """
     theta = math.radians(angle_deg)
     h = (3 * vol_mm3 / (math.pi * (1 - math.cos(theta)) ** 2 * (2 + math.cos(theta)))) ** (1/3)
     R = h / (1 - math.cos(theta))
     r = R * math.sin(theta)
     return R, r, h
 
 def calculate_derived_constants(raw_constants):
     constants = raw_constants.copy()
     shape = constants.get("shape", "cube").lower()
     constants["shape"] = shape
     egg_localization = constants.get("egg_localization", "center")
     vol = float(constants.get("vol", 0.0))  # μL = mm³
     sperm_conc = float(constants.get("sperm_conc", 0.0))  # ✅ これを必ず追加！
 
-    constants["gamete_r"] = float(constants["gamete_r"]) / 1000.0  # ← これで完結
-    # mm変換（この1行のみ）
+    # gamete_r is already provided in millimeters
+    constants["gamete_r"] = float(constants["gamete_r"])
 
     if shape == "drop":
         r_mm = ((3.0 * vol) / (4.0 * math.pi)) ** (1.0 / 3.0)
         constants["drop_r"] = r_mm
 
     if shape == "spot":
         angle_deg = float(constants.get("spot_angle", 0.0))
         spot_r_mm, bottom_r_mm, bottom_h_mm = calc_spot_geometry(vol, angle_deg)
         constants["spot_r"] = spot_r_mm
         constants["spot_bottom_r"] = bottom_r_mm
         constants["spot_bottom_height"] = bottom_h_mm
 
     if shape == "cube":
         edge = vol ** (1.0 / 3.0)
         constants["edge"] = edge
 
     constants["step_length"] = float(constants["vsl"]) / float(constants["sample_rate_hz"]) / 1000
 
 
 
     # ✅ 空間範囲の設定
     if shape == "cube":
         half = constants["edge"] / 2
         constants.update(
             x_min=-half, x_max=half,
