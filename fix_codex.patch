diff --git a/tools/plot_utils.py b/tools/plot_utils.py
index cffe33557dbd868f8d4370ed3b142e4c95a4ef95..a44557794f9fc37c8d04407830b23b844be1d423 100644
--- a/tools/plot_utils.py
+++ b/tools/plot_utils.py
@@ -149,51 +149,51 @@ def draw_egg_2d(ax, constants: dict, view: str = "xy"):
 
     if view == "xy":
         x, y = center[0], center[1]
     elif view == "xz":
         x, y = center[0], center[2]
     elif view == "yz":
         x, y = center[1], center[2]
     else:
         raise ValueError(f"Invalid view '{view}'. Must be 'xy', 'xz', or 'yz'.")
 
     egg = patches.Circle((x, y), r, color='gold', alpha=0.8, zorder=10)
     ax.add_patch(egg)
 def draw_egg_3d(ax, egg_pos, radius, *, color="yellow", alpha=0.6):
     u, v = np.mgrid[0:2 * np.pi:20j, 0:np.pi:10j]
     x = radius * np.cos(u) * np.sin(v) + egg_pos[0]
     y = radius * np.sin(u) * np.sin(v) + egg_pos[1]
     z = radius * np.cos(v) + egg_pos[2]
     ax.plot_surface(x, y, z, color=color, alpha=alpha, edgecolor="none")
 
 def plot_2d_trajectories(trajectory, constants, save_path=None, show=True, max_sperm=None):
     """
     trajectory: List[np.ndarray] or np.ndarray of shape (n_sperm, n_steps, 3)
     constants: dict
     """
     import numpy as np
-    trajectory = np.array(trajectory).astype(float) / 1000.0  # μm → mm 換算
+    trajectory = np.array(trajectory).astype(float)
 
     fig, axs = plt.subplots(1, 3, figsize=(12, 4))
     shape = constants.get('shape', 'cube').lower()
 
     
     if max_sperm is None:
         max_sperm = trajectory.shape[0]
 
     # 背景メディウムと卵子を各投影に描画
     for ax, view in zip(axs, ["xy", "xz", "yz"]):
         draw_medium_2d(ax, constants, view=view)
         draw_egg_2d(ax, constants, view=view)
 
     # 軌跡描画
     for s in range(min(max_sperm, trajectory.shape[0])):
         axs[0].plot(trajectory[s, :, 0], trajectory[s, :, 1], linewidth=0.6)  # XY
         axs[1].plot(trajectory[s, :, 0], trajectory[s, :, 2], linewidth=0.6)  # XZ
         axs[2].plot(trajectory[s, :, 1], trajectory[s, :, 2], linewidth=0.6)  # YZ
 
     # 軸範囲とアスペクト比の設定
     x_min, x_max = constants["x_min"], constants["x_max"]
     y_min, y_max = constants["y_min"], constants["y_max"]
     z_min, z_max = constants["z_min"], constants["z_max"]
 
     x_range = x_max - x_min
